AttributeName: WOString {
	_unroll = YES;
	value = d2wContext.displayNameForProperty;
}

AttributeRepetition: WORepetition {
	_unroll = YES;
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

AttributeValue: WOSwitchComponent {
	WOComponentName = d2wContext.componentName;
	_componentUnroll = YES;
	_unroll = YES;
	object = object;
	localContext = localContext;
}

BannerConditional: WOConditional {
	_unroll = YES;
	condition = showBanner;
}

CancelButton: WOImage {
	alt = "Reverts your changes";
	border = "0";
	filename = "ButtonCancel.gif";
	framework = "JavaDirectToWeb";
	height = "48";
	name = "Reverts your changes";
	width = "66";
}

CancelLink: WOHyperlink {
	action = cancelAction;
}

DeleteButton: WOImage {
	alt = "Deletes this object";
	border = "0";
	filename = "ButtonDelete.gif";
	framework = "JavaDirectToWeb";
	height = "48";
	name = "Deletes this object";
	width = "66";
}

DeleteLink: WOHyperlink {
	action = deleteAction;
}

EditImage: WOImage {
	alt = "Edits this object";
	border = "0";
	filename = "ButtonEdit.gif";
	framework = "JavaDirectToWeb";
	height = "48";
	name = "Edits this object";
	width = "66";
}

EditLink: WOHyperlink {
	action = editAction;
}

EditingForm: WOForm {
}

EntityName: WOString {
	_unroll = YES;
	value = d2wContext.entity.name;
}

ErrorMessage: WOString {
	escapeHTML = "NO";
	value = errorMessage;
}

ErrorPanel: WOConditional {
	condition = errorMessage.length;
}

InspectTable: WOGenericContainer {
	_unroll = YES;
	bgcolor = d2wContext.backgroundColorForTable;
	border = d2wContext.border;
	cellpadding = 3;
	cellspacing = 0;
	elementName = "Table";
}

InspectTableHeaderRow: WOGenericContainer {
	_unroll = YES;
	bgcolor = backgroundColorForHeaderRow;
	elementName = "tr";
}

IsEditingConditional2: WOConditional {
	_unroll = YES;
	condition = isEditing;
}

IsEditingConditional: WOConditional {
	_unroll = YES;
	condition = isEditing;
}

IsEntityWritable2: WOConditional {
	_unroll = YES;
	condition = isEntityReadOnly;
	negate = YES;
}

IsEntityWritable: WOConditional {
	_unroll = YES;
	condition = isEntityReadOnly;
	negate = YES;
}

IsNotEditingConditional2: WOConditional {
	_unroll = YES;
	condition = isEditing;
	negate = YES;
}

IsNotEditingConditional: WOConditional {
	_unroll = YES;
	condition = isEditing;
	negate = YES;
}

PageWrapper: WOSwitchComponent {
	WOComponentName = pageWrapperName;
	_componentUnroll = YES;
	_unroll = YES;
}

ReturnButton: WOImage {
	alt = "Returns to the previous page";
	border = "0";
	filename = "ReturnButton.gif";
	framework = "JavaDirectToWeb";
	height = "48";
	name = "Returns to the previous page";
	width = "66";
}

ReturnLink: WOHyperlink {
	action = nextPage;
}

ShowCancel: WOConditional {
	condition = showCancel;
}

SubmitChanges: WOImageButton {
	action = submitAction;
	alt = "Saves your changes";
	border = "0";
	filename = "ButtonSave.gif";
	framework = "JavaDirectToWeb";
	height = "48";
	name = "Saves your changes";
	width = "66";
}

